classdef MagicSquare < mlreportgen.dom.DocumentPart
    %MAGICSQUARE Create a magic square chapter in the magic square report
    %   An instance of this class creates a chapter to be appended to
    %   the magic square report generated by
    %   mlreportgen.examples.magic.Report. The chapter contains a numbered 
    %   chapter title that specifies the rank of the magic square and
    %   the magic square itself rendered either as a table or an image
    %   if it is too big to fit onto a page as a table.
    %
    %   A template specifies the layout and fixed content of the chapter 
    %   and holes for specifying the rank of the magic square and the 
    %   location of the magic square table or image. This class defines
    %   methods for filling in the holes in the template. It inherits
    %   a fill method from DocumentPart class that invokes the hole
    %   filling methods to generate the chapter. This allows the master
    %   report class to create a chapter simply by creating an instance
    %   of this class and invoking its fill method.
    
    properties
        
        %Rank of the magic square to be included in this chapter
        Rank
    end
    
    methods
        
        function chapter = MagicSquare(report, rank)
            %MAGICSQUARE(REPORT, RANK) constructs a chapter for REPORT
            % showing a tabular or graphic rendering of the magic square
            % of rank RANK. The layout and style of the chapter is
            % specified by an HTML or Word template, depending on the
            % output type of the report.
            
            % Get location of magic square chapter template
            m_file_dir = mfilename('fullpath');
            % mfilename('fullpath') returns a concatenation of current m-file
            % directory, file separator and current m-file name without extension. As
            % path to template starts 3 levels up from the current m-file directory, we have to
            % call fileparts() 4 times to first get rid of the file separator and current m-file
            % name and then go 3 levels up in directories structure. This is a workaround for
            % the fact that fullfile no longer resolves dots (e.g., ../) in paths.
            for i = 1 : 4
                [m_file_dir, ~, ~] = fileparts(m_file_dir);
            end
            templatePath =  fullfile(m_file_dir, ...
                'resources/templates/magic/magic_squares_chapter_template');
            
            % Construct chapter part.
            chapter = chapter@mlreportgen.dom.DocumentPart(report.Type, templatePath);
            
            % Set Rank property for use by fill methods.
            chapter.Rank = rank;
        end
        
        function fillChapterTitle(chapter)
            % This method is invoked by the chapter's fill method to
            % fill the ChapterTitle hole in the part template.
            chapter.append(sprintf('Rank %d Magic Square', chapter.Rank));
        end
        
        function fillMagicSquare(chapter)
            % This method is invoked by the chapter's fill method to
            % fill the MagicSquare hole in the part template.
            import mlreportgen.dom.*;
            
            % Compute the magic square of the specified rank, using
            % MATLAB's magic function.
            square = magic(chapter.Rank);
            
            % If the square's rank is less than 25, assume that it will
            % fit onto a page as a table; otherwise, render it as an 
            % image.
            if chapter.Rank < 25
                % Append the magic square as a table to the chapter.
                % Note that the Table constructor accepts an MxN 
                % numeric array as an argument and converts it to
                % a table. It also accepts the name of a table style
                % defined in the template.
                append(chapter, Table(square, 'MagicSquare'));
            else
                % Clear any prexisting figures.
                clf;
                
                % Display square as a color-coded figure.
                imagesc(square);
                title(sprintf('Magic Square N=%i',chapter.Rank))
                set(gca,'Ydir','normal');
                axis equal;
                axis tight;
                
                % Convert the figure to a png image for inclusion in
                % the chapter.
                fileName = sprintf('magic%d.png', chapter.Rank);                             
                print(gcf, '-dpng', fileName);                               
                image =Image(fileName);
                
                % Scale the image to an approximate square.
                image.Height = '4in';
                image.Width = '6in';
                
                % Append image to chapter
                append(chapter, image);
                
                % Delete figure as it is no longer necessary.
                delete(gcf);
            end
        end
        
        
    end
    
end

